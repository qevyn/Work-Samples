CREATE OR REPLACE PROCEDURE INSTORE_CONNECT.CAMPAIGNS.CREATE_HOMELAND_UPC()
RETURNS STRING
LANGUAGE SQL
EXECUTE AS CALLER
AS
$$
BEGIN
    --CALL INSTORE_CONNECT.CAMPAIGNS.CREATE_HOMELAND_UPC()
    CREATE OR REPLACE TABLE INSTORE_CONNECT.CAMPAIGNS.HOMELAND_UPC (
        CAMPAIGN_CYCLE STRING,
        CYCLE_START DATE,
        CYCLE_END DATE,
        WEEK_NUMBER INTEGER,
        WEEK_START_DATE DATE,
        WEEK_END_DATE DATE,
        PERIOD STRING,
        BANNER STRING,
        STORE_NUMBER STRING,
        TEST_START_DATE DATE,
        "GROUP" STRING,
        retailer STRING,
        CLUSTER STRING,
        store_name STRING,
        city STRING,
        state STRING,
        zip STRING,
        lat FLOAT,
        lon FLOAT,
        DEPARTMENT STRING,
        CATEGORY STRING,
        BRAND STRING,
        UPC STRING,
        QUAD_CAMPAIGN_ID STRING,
        CAMPAIGN_START_DATE DATE,
        CAMPAIGN_END_DATE DATE,
        "Campaign Type" STRING,
        "Promoted Type" STRING,
        SALES FLOAT,
        UNITS FLOAT,
        TRANSACTIONS FLOAT
    )
    AS
    
    WITH BASE_DATA AS (
            SELECT S.SALES_DATE,
                S.STORE_ID AS STORE_NUMBER,
                B.WHOLESALER_VENDOR AS MANUFACTURER,
                B.DEPT_NAME AS DEPARTMENT,
                B.CATEGORY,
                B.SUBCATEGORY,
                B.BRAND,
                S.UPC,
                S.SALES,
                S.UNIT_SALES AS UNITS,
                S."TRANSACTIONS"
            FROM INSTORE_CONNECT.CD_HOMELAND.STORE_ITEM_SALES S
            JOIN INSTORE_CONNECT.CD_HOMELAND.PRODUCT_UPC B ON S.UPC = B.UPC
            WHERE S.UNIT_SALES != 0
        ),

        CAMPAIGN_UPC_DATA AS (
            SELECT
                CU.CAMPAIGN_CYCLE,
                CK.CYCLE_START AS CYCLE_START_DATE,
                CK.CYCLE_END AS CYCLE_END_DATE,
                CU.CAMPAIGN_START_DATE,
                CASE
                    WHEN CU.CAMPAIGN_END_DATE IS NULL AND CU.CAMPAIGN_START_DATE = CK.CYCLE_START THEN CK.CYCLE_END
                    ELSE CU.CAMPAIGN_END_DATE
                END AS CAMPAIGN_END_DATE,
                CU.RETAILER,
                CU.BANNER,
                CU.QUAD_CAMPAIGN_ID,
                CU."Promoted Type",
                CASE WHEN CU.CPG THEN 'CPG' ELSE 'Retailer' END AS "Campaign Type",
                CU.UPC,
                CU.DEPT_NAME,
                CU.CATEGORY,
                CU.SUBCATEGORY,
                CU.BRAND,
                DATEDIFF(DAY, CK.CYCLE_START, CK.CYCLE_END) + 1 AS CYCLE_DAYS
            FROM INSTORE_CONNECT.CAMPAIGNS.SMARTSHEET_HOMELAND CU
            LEFT JOIN INSTORE_CONNECT.CAMPAIGNS.CYCLE_KEY CK
                ON CU.CAMPAIGN_CYCLE = CK.CAMPAIGN_CYCLE
            WHERE CU.UPC IS NOT NULL
        ),

        STORES_METADATA AS (
            SELECT
                tc.retailer,
                tc.banner,
                tc.store_id,
                tc."GROUP",
                tc.CLUSTER,
                tc.TEST_START_DATE,
                s.store_name,
                s.market,
                s.cass_city AS CITY,
                s.cass_state AS STATE,
                s.cass_zip AS ZIP,
                s.lat,
                s.lon
            FROM INSTORE_CONNECT.CAMPAIGNS.TEST_CONTROL_KEY_V2 tc
            LEFT JOIN INSTORE_CONNECT.CD_HOMELAND.STORES s
                ON s.store_id = tc.store_id
            WHERE tc.retailer = 'Homeland'
                AND CURRENT_DATE >= TEST_START_DATE
        )

    SELECT
        B.CAMPAIGN_CYCLE,
        B.CYCLE_START_DATE AS CYCLE_START,
        B.CYCLE_END_DATE AS CYCLE_END,
        FLOOR(DATEDIFF(DAY, B.CYCLE_START_DATE, A.SALES_DATE) / 7) AS WEEK_NUMBER,
        DATEADD(DAY, FLOOR(DATEDIFF(DAY, B.CYCLE_START_DATE, A.SALES_DATE) / 7) * 7, B.CYCLE_START_DATE) AS WEEK_START_DATE,
        DATEADD(DAY, FLOOR(DATEDIFF(DAY, B.CYCLE_START_DATE, A.SALES_DATE) / 7) * 7 + 6, B.CYCLE_START_DATE) AS WEEK_END_DATE,
        'CY Campaign' AS PERIOD,
        S.BANNER,
        A.STORE_NUMBER,
        S.TEST_START_DATE,
        S."GROUP",
        S.retailer,
        S.CLUSTER,
        S.store_name,
        S.city,
        S.state,
        S.zip,
        S.lat,
        S.lon,
        A.DEPARTMENT,
        A.CATEGORY,
        A.BRAND,
        A.UPC,
        B.QUAD_CAMPAIGN_ID,
        B.CAMPAIGN_START_DATE,
        B.CAMPAIGN_END_DATE,
        B."Campaign Type",
        B."Promoted Type",
        SUM(A.SALES) AS SALES,
        SUM(A.UNITS) AS UNITS,
        SUM(A."TRANSACTIONS") AS "TRANSACTIONS"
    FROM BASE_DATA A
    JOIN STORES_METADATA S
        ON S.store_id = A.STORE_NUMBER
        AND A.SALES_DATE >= S.TEST_START_DATE
    JOIN CAMPAIGN_UPC_DATA B
        ON B.BANNER = S.BANNER
        AND B.UPC = A.UPC
        AND A.SALES_DATE BETWEEN B.CAMPAIGN_START_DATE AND B.CAMPAIGN_END_DATE
    GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28
        
    UNION ALL
    
    SELECT
        B.CAMPAIGN_CYCLE,
        B.CYCLE_START_DATE AS CYCLE_START,
        B.CYCLE_END_DATE AS CYCLE_END,
        FLOOR(DATEDIFF(DAY, B.CYCLE_START_DATE, A.SALES_DATE) / 7) AS WEEK_NUMBER,
        DATEADD(DAY, FLOOR(DATEDIFF(DAY, B.CYCLE_START_DATE, A.SALES_DATE) / 7) * 7, B.CYCLE_START_DATE) AS WEEK_START_DATE,
        DATEADD(DAY, FLOOR(DATEDIFF(DAY, B.CYCLE_START_DATE, A.SALES_DATE) / 7) * 7 + 6, B.CYCLE_START_DATE) AS WEEK_END_DATE,
        'CY Pre-Campaign' AS PERIOD,
        S.BANNER,
        A.STORE_NUMBER,
        S.TEST_START_DATE,
        S."GROUP",
        S.retailer,
        S.CLUSTER,
        S.store_name,
        S.city,
        S.state,
        S.zip,
        S.lat,
        S.lon,
        A.DEPARTMENT,
        A.CATEGORY,
        A.BRAND,
        A.UPC,
        B.QUAD_CAMPAIGN_ID,
        B.CAMPAIGN_START_DATE,
        B.CAMPAIGN_END_DATE,
        B."Campaign Type",
        B."Promoted Type",
        SUM(A.SALES) AS SALES,
        SUM(A.UNITS) AS UNITS,
        SUM(A."TRANSACTIONS") AS "TRANSACTIONS"
    FROM BASE_DATA A
    JOIN STORES_METADATA S
        ON S.store_id = A.STORE_NUMBER
        AND DATEADD(WEEK, 12, A.SALES_DATE) >= S.TEST_START_DATE
    JOIN CAMPAIGN_UPC_DATA B
        ON B.BANNER = S.BANNER
        AND B.UPC = A.UPC
        AND A.SALES_DATE BETWEEN DATEADD(WEEK, -12, B.CAMPAIGN_START_DATE) AND DATEADD(DAY, -1, B.CAMPAIGN_START_DATE)
    GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28;
        

    RETURN 'HOMELAND_UPC table created successfully';
EXCEPTION
    WHEN OTHER THEN
        -- Drop temporary table in case of error to avoid leaving it behind
        DROP TABLE IF EXISTS INSTORE_CONNECT.CAMPAIGNS.TEMP_BASE_DATA;
        RAISE;
END;
$$;